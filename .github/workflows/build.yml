name: Build
on:
  push:
    branches:
      - main # or the name of your main branch
jobs:

  gitleak-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install GitLeak
        run: |
          wget -O gitleak https://github.com/zricethezav/gitleaks/releases/latest/download/gitleaks-linux-amd64
          chmod +x gitleak
          sudo mv gitleak /usr/local/bin/

      - name: Run GitLeak Scan
        run: |
          gitleak --path . --verbose > gitleaks-report.json

      - name: Show GitLeaks Report
        run: |
          cat gitleaks-report.json

      - name: Check GitLeaks Report
        run: |
          if grep -q '"is_secret":true' gitleaks-report.json; then
            echo "GitLeaks found sensitive information!"
            grep -n '"is_secret":true' gitleaks-report.json
            exit 1
          else
            echo "GitLeaks scan passed, no sensitive information found."
          fi

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Check SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
