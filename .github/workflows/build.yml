name: Build
on:
  push:
    branches:
      - main # or the name of your main branch
jobs:
  scan:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Display gitleaks config
        run: cat .gitleaks.toml
      - name: Run GitLeaks Scan
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  build:
    name: Build
    needs: scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache SonarQube dependencies
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          
      - name: Check SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      - name: Check for sonarqube ignore directives
        run: |
          if grep -r "// NOSONAR" .; then
            echo "Found // NOSONAR directive(s). Please remove them."
            exit 1
          fi
          if grep -r "sonar-ignore" .; then
            echo "Found sonar-ignore directive(s). Please remove them."
            exit 1
          fi
        shell: bash

